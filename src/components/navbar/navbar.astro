---
import LanguageSelector from "@components/languageselector.astro";
import ThemeSelector from "@components/themeselector.astro";
import { Icon } from "astro-icon";
import { localizePath } from "astro-i18next";
import { t } from "i18next";

export const menuitems = [
	{
		title: "Sub items",
		children: [
			{ title: "Subitem 1", path: "#" },
			{ title: "Subitem 2", path: "#" },
			{ title: "Subitem 3", path: "#" },
		],
	},
	{
		title: "header.pricing",
		path: "/pricing",
	},
	{
		title: "header.blog",
		path: "/blog",
	},
	{
		title: "header.contact",
		path: "/contact",
	},
];
---

<header class="relative z-50 flex flex-col">
	<div class="top-0 h-16 pt-6">
		<div class="sm:px-8 w-full">
			<div class="mx-auto max-w-7xl lg:px-8">
				<div class="relative px-4 sm:px-8 lg:px-12">
					<div class="mx-auto max-w-2xl lg:max-w-5xl">
						<div class="relative flex gap-4">
							<div class="flex flex-1 transition md:transition ease-in-out delay-150">
								<a
									href={localizePath("/")}
									class="flex gap-3 items-center text-lg font-semibold tracking-widest text-gray-900 uppercase rounded-lg dark:text-white focus:outline-none focus:shadow-outline">
									<Icon name="logo" width="30" class="dark:invert" alt="Logo" />
									<span class="hidden md:block">Astros</span>
								</a>
							</div>
							<div class="flex flex-1 justify-center">
								<nav
									class="group rounded-full bg-gradient-to-b from-zinc-50/70 to-white/90 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur-md dark:from-zinc-900/70 dark:to-zinc-800/90 dark:ring-zinc-100/10 [--spotlight-color:rgb(236_252_203_/_0.6)] dark:[--spotlight-color:rgb(217_249_157_/_0.07)] pointer-events-auto relative z-50 hidden md:block">
									<ul class="flex bg-transparent px-3 text-sm font-medium text-zinc-800 dark:text-zinc-200">
										{
											menuitems.map((item) =>
												item.children && item.children.length ? (
													<div x-on:click.away="open = false" x-data="{open: false}">
														<div
															x-data="{ isActive: false }"
															x-init={`() => {
																	const path = $el.getAttribute('data-path').split(',');
																	const path2 = path.map(i => i + '/');
																	const path3 = path.map(i => '/it'+ i);
																	const path4 = path.map(i => '/it'+ i + '/');
																	path.push(...path2,...path3,...path4);
																	console.log(path);
																	const checkPath = () => {
																		isActive  = path.includes(window.location.pathname);
																	};
																	document.removeEventListener('astro:page-load', checkPath);
																	document.addEventListener('astro:page-load', checkPath);
																		}`}
															x-on:mouseenter="open = true"
															x-on:mouseleave="open = false"
															class="relative block whitespace-nowrap px-3 py-2 transition cursor-pointer"
															data-path={item.children.map((child) => child.path)}>
															<span x-bind:class="{'text-slate-600 dark:text-slate-400': isActive}">
																{t(item.title)}
															</span>
															<svg
																fill="currentColor"
																viewBox="0 0 20 20"
																x-bind:class="{'rotate-180': open, 'rotate-0': !open}"
																class="inline w-4 h-4 mb-[2px] transition-transform duration-200 transform">
																<path
																	fill-rule="evenodd"
																	d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
																	clip-rule="evenodd"
																/>
															</svg>

															<span
																x-show="isActive"
																class="absolute inset-x-1 -bottom-px h-px bg-gradient-to-r from-lime-700/0 via-slate-700/70 to-lime-700/0 dark:from-cyan-400/0 dark:via-slate-400/40 dark:to-cyan-400/0"
															/>

															<div
																x-cloak
																x-show="open"
																x-transition:enter="transition ease-out duration-100"
																x-transition:enter-start="transform opacity-0 scale-95"
																x-transition:enter-end="transform opacity-100 scale-100"
																x-transition:leave="transition ease-in duration-75"
																x-transition:leave-start="transform opacity-100 scale-100"
																x-transition:leave-end="transform opacity-0 scale-95"
																class="absolute left-0 mt-4 w-auto rounded-md bg-transparent bg-gradient-to-b from-zinc-50/50 to-white/90 px-3 py-2 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur transition dark:from-zinc-900/50 dark:to-zinc-800/90 dark:ring-white/10 dark:hover:ring-white/20">
																<div>
																	{item.children.map((subitem) => (
																		<li>
																			<a
																				href={localizePath(subitem.path)}
																				x-data="{ isActive: false }"
																				x-init={`() => {
																			const path = $el.getAttribute('data-path');
																			const checkPath = () => {
																				isActive = window.location.pathname === path ||
																							window.location.pathname === path + '/' ||
																							window.location.pathname === '/it' + path ||
																							window.location.pathname === '/it' + path + '/';
																			};
																			document.removeEventListener('astro:page-load', checkPath);
																			document.addEventListener('astro:page-load', checkPath);
																		}`}
																				class="relative block whitespace-nowrap px-3 py-2 transition hover:text-slate-600 dark:hover:text-slate-400"
																				x-bind:class="{'text-slate-600 dark:text-slate-400': isActive}"
																				data-path={subitem.path}>
																				{t(subitem.title)}
																			</a>
																		</li>
																	))}
																</div>
															</div>
														</div>
													</div>
												) : (
													<li>
														<a
															href={localizePath(item.path)}
															x-data="{ isActive: false }"
															x-init={`() => {
																const path = $el.getAttribute('data-path');
																const checkPath = () => {
																	isActive = window.location.pathname === path ||
																				window.location.pathname === path + '/' ||
																				window.location.pathname === '/it' + path ||
																				window.location.pathname === '/it' + path + '/';
																};
																document.removeEventListener('astro:page-load', checkPath);
																document.addEventListener('astro:page-load', checkPath);
															}`}
															class="relative block whitespace-nowrap px-3 py-2 transition hover:text-slate-600 dark:hover:text-slate-400"
															x-bind:class="{'text-slate-600 dark:text-slate-400': isActive}"
															data-path={item.path}>
															{t(item.title)}

															<span
																x-show="isActive"
																class="absolute inset-x-1 -bottom-px h-px bg-gradient-to-r from-lime-700/0 via-slate-700/70 to-lime-700/0 dark:from-cyan-400/0 dark:via-slate-400/40 dark:to-cyan-400/0"
															/>
														</a>
													</li>
												),
											)
										}
									</ul>
								</nav>
							</div>
							<div class="flex justify-end gap-3 md:flex-1">
								<div class="block md:hidden" x-on:click.away="open = false" x-data="{open: false}">
									<div
										x-on:click="open = true"
										class="group flex items-center rounded-full bg-gradient-to-b from-zinc-50/20 to-white/80 px-4 py-2 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur-md focus:outline-none focus-visible:ring-2 dark:from-zinc-900/30 dark:to-zinc-800/80 dark:text-zinc-200 dark:ring-white/10 dark:hover:ring-white/20 dark:focus-visible:ring-yellow-500/80">
										MENU
										<svg
											fill="currentColor"
											viewBox="0 0 20 20"
											x-bind:class="{'rotate-180': open, 'rotate-0': !open}"
											class="inline w-4 h-4 mb-[2px] transition-transform duration-200 transform">
											<path
												fill-rule="evenodd"
												d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
												clip-rule="evenodd">
											</path>
										</svg>
									</div>

									<div
										x-cloak
										x-show="open"
										x-transition:enter="transition ease-out duration-100"
										x-transition:enter-start="transform opacity-0 scale-95"
										x-transition:enter-end="transform opacity-100 scale-100"
										x-transition:leave="transition ease-in duration-75"
										x-transition:leave-start="transform opacity-100 scale-100"
										x-transition:leave-end="transform opacity-0 scale-95"
										class="fixed inset-0 z-50 bg-zinc-800/40 backdrop-blur dark:bg-black/80 opacity-100">
										<div
											x-on:click.away="open = false"
											class="fixed inset-x-4 top-8 z-50 origin-top rounded-3xl bg-gradient-to-b from-zinc-100/75 to-white p-8 ring-1 ring-zinc-900/5 dark:from-zinc-900/50 dark:to-zinc-900 dark:ring-zinc-800 opacity-100 scale-100">
											<div class="flex flex-row-reverse items-center justify-between">
												<div aria-label="close menu" class="-m-1 p-1" x-on:click="open = false">
													<svg viewBox="0 0 24 24" aria-hidden="true" class="h-6 w-6 text-zinc-500 dark:text-zinc-400">
														<path
															d="m17.25 6.75-10.5 10.5M6.75 6.75l10.5 10.5"
															fill="none"
															stroke="currentColor"
															stroke-width="1.5"
															stroke-linecap="round"
															stroke-linejoin="round">
														</path>
													</svg>
												</div>
												<h2 class="text-sm font-medium text-zinc-600 dark:text-zinc-400">站内导航</h2>
											</div>

											<nav class="mt-6">
												<ul
													class="-my-2 divide-y divide-zinc-500/20 text-base text-zinc-800 dark:divide-zinc-100/5 dark:text-zinc-300">
													{
														menuitems.map((item) =>
															item.children && item.children.length ? (
																<div x-data="{childOpen: false}">
																	<div class="py-2 flex justify-between" x-on:click="childOpen = !childOpen">
																		<span>多级菜单</span>
																		<svg
																			fill="currentColor"
																			viewBox="0 0 20 20"
																			x-bind:class="{'rotate-180': childOpen, 'rotate-0': !childOpen}"
																			class="inline w-4 h-4 mb-[2px] transition-transform duration-200 transform">
																			<path
																				fill-rule="evenodd"
																				d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
																				clip-rule="evenodd"
																			/>
																		</svg>
																	</div>

																	<div
																		x-cloak
																		x-show="childOpen"
																		x-transition:enter="transition ease-out duration-100"
																		x-transition:enter-start="transform opacity-0 scale-95"
																		x-transition:enter-end="transform opacity-100 scale-100"
																		x-transition:leave="transition ease-in duration-75"
																		x-transition:leave-start="transform opacity-100 scale-100"
																		x-transition:leave-end="transform opacity-0 scale-95"
																		class="my-3 p-4 divide-y divide-zinc-500/20 text-base text-zinc-800 dark:divide-zinc-100/5 dark:text-zinc-300 rounded-2xl  origin-top  bg-gradient-to-b from-zinc-100/75 to-white ring-1 ring-zinc-900/5 dark:from-zinc-900 dark:to-zinc-900 dark:ring-zinc-800 opacity-100 scale-100">
																		{item.children.map((subitem) => (
																			<li>
																				<a
																					class="block py-2"
																					data-headlessui-state="open"
																					href={localizePath(subitem.path)}>
																					{t(subitem.title)}
																				</a>
																			</li>
																		))}
																	</div>
																</div>
															) : (
																<li>
																	<a class="block py-2" data-headlessui-state="open" href={localizePath(item.path)}>
																		{t(item.title)}
																	</a>
																</li>
															),
														)
													}
												</ul>
											</nav>
										</div>
									</div>
								</div>

								<LanguageSelector />
								<ThemeSelector />
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</header>

<!-- <div
	x-data="{open: window.innerWidth < 768 ? false : true}"
	class="flex flex-col max-w-screen-xl px-4 mx-auto md:items-center md:justify-between md:flex-row md:px-6 lg:px-8 z-10 md:pt-2 relative">
	<div class="p-4 flex flex-row items-center justify-between">
		<a
			href={localizePath("/")}
			class="flex gap-3 items-center text-lg font-semibold tracking-widest text-gray-900 uppercase rounded-lg dark:text-white focus:outline-none focus:shadow-outline">
			<Icon name="logo" width="30" class="dark:invert" alt="Logo" />
			 Astros
		</a>
		<button class="md:hidden text-gray-500 w-10 h-10 relative focus:outline-none" @click="open = !open">
			<span class="sr-only">Open main menu</span>
			<div class="block w-5 absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2">
				<span
					aria-hidden="true"
					class="block absolute h-0.5 w-5 bg-current transform transition duration-200 ease-in-out"
					:class="{'rotate-45': open,' -translate-y-1.5': !open }">
				</span>
				<span
					aria-hidden="true"
					class="block absolute h-0.5 w-5 bg-current transform transition duration-200 ease-in-out"
					:class="{'opacity-0': open } ">
				</span>
				<span
					aria-hidden="true"
					class="block absolute h-0.5 w-5 bg-current transform transition duration-200 ease-in-out"
					:class="{'-rotate-45': open, ' translate-y-1.5': !open}">
				</span>
			</div>
		</button>
	</div>
	<nav
		:class="{'flex': open, 'hidden': !open}"
		x-show="open"
		x-transition:enter="transition ease-out duration-200"
		x-transition:enter-start="opacity-0 transform scale-90"
		x-transition:enter-end="opacity-100 transform scale-100"
		x-transition:leave="transition ease-in duration-200"
		x-transition:leave-start="opacity-100 transform scale-100"
		x-transition:leave-end="opacity-0 transform scale-90"
		class="md:mt-0 lg:pl-8 md:items-center flex-grow pb-4 md:pb-0 flex-col gap-2 transition-all ease-out md:transition-none md:justify-center md:flex-row hidden">
		<div class="flex flex-col flex-grow text-center gap-2 md:justify-center md:items-center md:flex md:flex-row md:mx-auto">
			{
				menuitems.map((item) =>
					item.children && item.children.length ? (
						<div x-on:click.away="open = false" class="relative" x-data="{ open: false }">
							<Button x-on:mouseenter="open = true" x-on:mouseleave="open = false" style="link" size="sm" class="mt-[2px]">
								{t(item.title)}
								<svg
									fill="currentColor"
									viewBox="0 0 20 20"
									x-bind:class="{'rotate-180': open, 'rotate-0': !open}"
									class="inline w-4 h-4 mb-[2px] transition-transform duration-200 transform">
									<path
										fill-rule="evenodd"
										d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
										clip-rule="evenodd"
									/>
								</svg>
							</Button>
							<div
								x-show="open"
								x-transition:enter="transition ease-out duration-100"
								x-transition:enter-start="transform opacity-0 scale-95"
								x-transition:enter-end="transform opacity-100 scale-100"
								x-transition:leave="transition ease-in duration-75"
								x-transition:leave-start="transform opacity-100 scale-100"
								x-transition:leave-end="transform opacity-0 scale-95"
								class="absolute mt-2 bg-white right-0 w-full origin-top-right rounded-md md:w-48 outline-2 border border-gray-300">
								<div class="px-2 py-2 rounded-md shadow dark:bg-gray-800">
									{item.children.map((subitem) => (
										<Link
											href={localizePath(subitem.path)}
											style="hover"
											size="sm"
											class="block"
											x-data="{ isActive: false }"
											x-init={`() => {
												const path = $el.getAttribute('data-path');
												const checkSubPath = () => {
													isActive = window.location.pathname === path ||
																window.location.pathname === path + '/' ||
																window.location.pathname === '/it' + path ||
																window.location.pathname === '/it' + path + '/';
												};
												document.removeEventListener('astro:page-load', checkSubPath);
												document.addEventListener('astro:page-load', checkSubPath);
											}`}
											x-bind:class="{ 'bg-gray-200 dark:bg-gray-600': isActive }">
											{subitem.title}
										</Link>
									))}
								</div>
							</div>
						</div>
					) : (
						<Link
							href={localizePath(item.path)}
							style="hover"
							size="sm"
							x-data="{ isActive: false }"
							x-init={`() => {
								const path = $el.getAttribute('data-path');
								const checkPath = () => {
									isActive = window.location.pathname === path ||
												window.location.pathname === path + '/' ||
												window.location.pathname === '/it' + path ||
												window.location.pathname === '/it' + path + '/';
								};
								document.removeEventListener('astro:page-load', checkPath);
								document.addEventListener('astro:page-load', checkPath);
							}`}
							x-bind:class="{ 'bg-gray-200 dark:bg-gray-600': isActive }"
							data-path={item.path}>
							{t(item.title)}
						</Link>
					),
				)
			}
		</div>
		<div class="mt-4 md:mt-0 flex flex-col md:flex-row gap-4">
			<LanguageSelector />
			<ThemeSelector />
		</div>
	</nav>
</div> -->

<style>
	[x-cloak] {
		display: none !important;
	}
</style>
